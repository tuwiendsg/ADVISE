#  manual | auto | guided
# manual means the structure is submitted to MELA-AnalysysService using its RESTful API
# auto means to auto structure metrics from all VMs in 1 Service unit, belonging to one Service Topology
#
SERVICE_STRUCTURE_DETECTION = manual

# monitoring | replay
# monitoring means data source config is read, and data collected and stored
# replay means it acts as HyperSQL server
BEHAVIOR = monitoring

#used in case metrics are injected in the virtual machines to automatically detect to which Service Unit a VM belongs
#if automatic discovery of structure is employed, the serviceUnitID metric returns the ID of the ServiceUNit
#
SERVICE_ELEMENT_ID_METRIC_NAME = serviceUnitID

#interval at which monitoring data is collected in seconds  
DATA_COLLECTION_INTERVAL_IN_SECONDS = 1

#interval at which monitoring data is aggregated. For example, 10 means
#two monitoring snapshots got at 5 seconds interval are aggregated into 1 with DATA_AGGREGATION_WINDOWS = 2
#if for example we monitor at 5 seconds and want to aggregate each 10 monitoring windows, we state DATA_AGGREGATION_WINDOWS = 10
DATA_AGGREGATION_WINDOWS = 1

#IP and ports at which the data service exposes information
MELA_DATA_SERVICE.DATA_PORT = 9123
MELA_DATA_SERVICE.CONFIGURATION_PORT = 9124
MELA_DATA_SERVICE.IP = localhost

#directory PATH where MELA will store for now its local file-based database 
DATA_BASE_LOCATION_PATH = /home/ubuntu/mela-data-storage

# continuous | fresh
# continuous means monitoring data from same service is kept and accessed between runs 
OPERATION_MODE = continuous

